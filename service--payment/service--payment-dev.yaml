spring:
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          time_zone: ${SPRING_JPA_TIMEZONE:America/Sao_Paulo}
    hibernate:
      ddl-auto: update
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
  datasource:
    password: ${SPRING_DATASOURCE_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${SPRING_DATASOURCE_USERNAME:root}
    tomcat:
      max-active: ${SPRING_DATASOURCE_MAX_ACTIVE:10}
    url: jdbc:mysql://mysql.ns-infra.svc.cluster.local:3306/dbpayment?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false

kafka:
  bootstrap-servers: kafka.ns-infra.svc.cluster.local:9092
  schemaRegistry: http://schema-registry.ns-infra.svc.cluster.local:8081
  notification:
    topic: kfk-order-notification
    groupId: grp-order-notification
  payment:
    topic: kfk-order-payment
    groupId: grp-order-payment

cache:
  redis:
    host: redis.ns-infra.svc.cluster.local
    port: 6379
    ttlCache: 3

backend:
  services:
    customerUrl: http://api--customer.shoes-eks.svc.cluster.local:5000/api--customer/
    productUrl: http://api--product.shoes-eks.svc.cluster.local:5000/api--product/
    orderUrl: http://api--order.shoes-eks.svc.cluster.local:5000/api--order/

  gateway:
    bankSlipUrl: https://a0bb02cd-0bbc-46d6-915b-36835334ba89.mock.pstmn.io
    pixUrl: https://a0bb02cd-0bbc-46d6-915b-36835334ba89.mock.pstmn.io
    cardUrl: https://a0bb02cd-0bbc-46d6-915b-36835334ba89.mock.pstmn.io

token:
  tokenUrl: http://svc-login.ns-login.svc.cluster.local:7080/auth/realms/shoesclick-site/
  clientId: site--shoesclick
  clientSecret: LdpZ9Zyp3p0dN0fbaHtwowDR7bLF7TjS
  grantType : client_credentials